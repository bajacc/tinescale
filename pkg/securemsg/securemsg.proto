syntax = "proto3";

package securemsg;

option go_package = "github.com/bajacc/tinescale/pkg/securemsg";

message UnencryptedMessage {
    oneof message_type {
        EndpointRequest endpoint_request = 1;
        EndpointResponse endpoint_response = 2;
        ToRelayMessage to_relay = 3;
        FromRelayMessage from_relay = 4;
        PingMessage ping_message = 5;
        PongMessage pong_message = 6;
    }
}

message Address {
    bytes ip = 1;
    uint32 port = 2;    // uint32 to match Go's uint16, protobuf doesn't have uint16
}

message EndpointRequest {
    uint32 request_id = 1;
}

message EndpointResponse {
    uint32 request_id = 1;
    repeated Address addresses = 2;
}

message ToRelayMessage {
    bytes dst_key = 1;
    bytes src_key = 2;
    bytes data = 3;
}

message FromRelayMessage {
    bytes dst_key = 1;
    bytes src_key = 2;
    bytes data = 3;
}

message PingMessage {
    uint32 nonce = 1; // 4-byte nonce
}

message PongMessage {
    uint32 nonce = 1; // 4-byte nonce
}

message NoiseHandshakeInit {
    bytes sender_static = 1;    // 32-byte static public key
    bytes ephemeral = 2;        // 32-byte ephemeral public key
    bytes encrypted_static = 3; // 48-byte encrypted static key
    bytes encrypted_timestamp = 4; // 28-byte encrypted timestamp
}

message NoiseHandshakeResponse {
    bytes sender_static = 1;    // 32-byte static public key
    bytes ephemeral = 2;        // 32-byte ephemeral public key
    bytes encrypted_nothing = 3; // 16-byte encrypted empty payload
}

message NoiseTransportMessage {
    uint32 counter = 1;         // Transport message counter
    bytes encrypted_data = 2;   // Encrypted payload with 16-byte auth tag
}